= form_for @ad, :html => { :class => 'form-horizontal' } do |f|
  - if @ad.errors.any?
    #error_explanation
      %h2= "#{pluralize(@ad.errors.count, "error")} prohibited this user from being saved:"
      %ul
        - @ad.errors.full_messages.each do |msg|
          %li= msg

  .control-group
    .controls
      %li.icon-align-justify.icon-large
        %span
          = f.text_area :description, :class => 'text_area input-xlarge', :rows => 3, :placeholder => 'Description'
  .control-group
    .controls
      %li.icon-shopping-cart.icon-large
        %span
          = f.text_field :price, :class => 'text_field input-xlarge', :placeholder => 'Price'
  .control-group
    .controls
      %li.icon-map-marker.icon-large
        %span
          = f.text_field :address, :class => 'address-picker-input input-xlarge', :placeholder => 'Address'
      = hidden_field_tag 'ad_address_locality',nil, :name => 'ad[locality]',:class => 'address-picker-locality input-xlarge'
      = hidden_field_tag 'ad_address_country', nil, :name => 'ad[country]', :class => 'address-picker-country input-xlarge'
      = hidden_field_tag 'ad_address_latitude', nil, :name => 'ad[lat]', :class => 'address-picker-latitude input-xlarge'
      = hidden_field_tag 'ad_address_longitude', nil, :name => 'ad[lng]', :class => 'address-picker-longitude input-xlarge'
  .control-group
    .controls
      %li.icon-filter.icon-large
        %span
          = f.autocomplete_field :category, autocomplete_category_name_ads_path, :class => 'input-xlarge', :placeholder => 'Category'
      = #select_tag "Category", options_from_collection_for_select(Category.all, "id", "name"), :name => 'ad[category]',:prompt => "Select something"
  .control-group
    .controls
      %li.icon-user.icon-large
        %span
          = f.text_field :user_id, :class => 'text_field input-xlarge', :placeholder => 'User'
  .address-picker-map-wrapper#ad_address_map_wrapper
    .address-picker-legend
    .address-picker-map#ad_address_map

  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = link_to t('.cancel', :default => t("helpers.links.cancel")), ads_path, :class => 'btn'

%script{:type => "text/javascript"}
  :plain
    var picker = new AddressPickerRails.Picker({idPrefix:"ad_address"});
    picker.apply(function (railsPicker) {
      console.debug("callback for a single pond with ID '%s'", railsPicker.getIdPrefix());
    });
